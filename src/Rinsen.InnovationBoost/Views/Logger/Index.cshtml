@model Rinsen.InnovationBoost.Models.LoggerModel
@using Microsoft.AspNetCore.Hosting;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;

@inject IHostingEnvironment HostingEnvironment
@{
    ViewBag.NgAppName = "app";
}
<style>
    .textlimit {
        display: block;
        width: 50em;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
    .row.top-buffer {
        margin-top: 20px;
    }
</style>
<div class="container-fluid ng-cloak" data-ng-controller="LoggerController as vm">
    <div class="row">
        <div class="col-lg-12">
            <div isteven-multi-select data-input-model="vm.options.logEnvironments" data-output-model="vm.selection.logEnironments" data-button-label="name" data-item-label="name" data-tick-property="selected" style="display:inline-block"></div>
            <div isteven-multi-select data-input-model="vm.options.logApplications" data-output-model="vm.selection.logApplications" data-button-label="name" data-item-label="name" data-tick-property="selected" style="display:inline-block"></div>
            <div isteven-multi-select data-input-model="vm.options.logLevels" data-output-model="vm.selection.logLevels" data-button-label="name" data-item-label="name" data-tick-property="selected" style="display:inline-block"></div>
            <div isteven-multi-select data-input-model="vm.options.logSources" data-output-model="vm.selection.logSources" data-button-label="name" data-item-label="name" data-tick-property="selected" style="display:inline-block"></div>
            <div class="form-inline" style="display:inline-block">
                <div class="form-group" style="display:inline-block">
                    <label for="from">From</label>
                    <input class="form-control" type="datetime-local" id="from" data-ng-model="vm.options.from" />
                </div>
                <div class="form-group" style="display:inline-block">
                    <label for="to">To</label>
                    <input class="form-control" type="datetime-local" id="to" data-ng-model="vm.options.to" />
                </div>
            </div>
            <div style="display:inline-block">
                <button class=" btn btn-primary" data-ng-click="vm.show()">
                    Show
                </button>
            </div>
        </div>
    </div>
    <div class="row top-buffer">
        @*<div class="col-xs-2">
            <div class="panel panel-primary">
                <div class="panel-heading">Log selection</div>
                <div class="panel-body">
                    <div>
                        <button class=" btn btn-primary" data-ng-click="vm.show()">
                            Show
                        </button>
                    </div>
                    <div>
                        <h2>Environments</h2>
                        <div data-ng-repeat="logEnv in vm.options.logEnvironments track by logEnv.id">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" data-ng-checked="logEnv.selected" data-ng-model="logEnv.selected" />
                                    {{logEnv.name}}
                                </label>
                            </div>
                        </div>
                    </div>
                    <div>
                        <h2>Applications</h2>
                        <div data-ng-repeat="logApp in vm.options.logApplications track by logApp.id">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" data-ng-checked="logApp.selected" data-ng-model="logApp.selected" />
                                    {{logApp.name}}
                                </label>
                            </div>
                        </div>
                    </div>
                    <div>
                        <h2>Log levels</h2>
                        <div data-ng-repeat="logLevel in vm.options.logLevels track by logLevel.level">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" data-ng-checked="logLevel.selected" data-ng-model="logLevel.selected" />
                                    {{logLevel.name}}
                                </label>
                            </div>
                        </div>
                    </div>
                    <div>
                        <h2>Log sources</h2>
                        <div data-ng-repeat="logSource in vm.options.logSources track by logSource.id">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" data-ng-checked="logSource.selected" data-ng-model="logSource.selected" />
                                    {{logSource.name}}
                                </label>
                            </div>
                        </div>
                    </div>
                    <div>
                        <h2>Period</h2>
                        <div class="form-group">
                            <label for="from">From</label>
                            <input class="form-control" type="datetime-local" id="from" data-ng-model="vm.options.from" />
                        </div>
                        <div class="form-group">
                            <label for="to">To</label>
                            <input class="form-control" type="datetime-local" id="to" data-ng-model="vm.options.to" />
                        </div>
                    </div>
                </div>
            </div>
        </div>*@
        <div class="col-xs-12">
            <table st-table="logTable" st-safe-src="vm.logs" class="table table-striped table-bordered">
                http://lorenzofox3.github.io/smart-table-website/
                <thead>
                    <tr>
                        <th st-sort="id">Id</th>
                        <th st-sort="sourceName">SourceName</th>
                        <th st-sort="message">Message</th>
                        <th st-sort="applicationName">ApplicationName</th>
                        <th st-sort="logLevelName">LogLevel</th>
                        <th st-sort="timestamp">Timestamp</th>
                    </tr>
                    <tr>
                        <th colspan="6"><input st-search="" class="form-control" placeholder="global search ..." type="text" /></th>
                    </tr>
                </thead>
                <tbody>
                    @*data-ng-click="log.expanded = !log.expanded"*@
                <tr data-ng-repeat="log in logTable">
                    <td>{{log.id}}</td>
                    <td style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 20em;">{{log.sourceName}}</td>
                    <td style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 20em;">{{log.message}}</td>
                    <td>{{log.applicationName}}</td>
                    <td>{{log.logLevelName}}</td>
                    <td style="white-space: nowrap">{{log.timestamp | date:'yyyy-MM-dd HH:mm:ss'}}</td>
                </tr>
                @*<tr data-ng-show="log.expanded">
            <td colspan="6">
                {{log.message}}<br />
                <table class="table table-striped table-bordered">
                    <tbody data-ng-repeat="prop in log.logProperties">
                        <tr>
                            <td>{{prop.name}}</td>
                            <td>{{prop.value}}</td>
                        </tr>
                    </tbody>
                </table>
            </td>
        </tr>*@
            </tbody>
            </table>
            <div data-ng-show="!vm.dataLoading && vm.logs.length === 0">
                <div class="alert alert-info" role="alert">No logs to display</div>
            </div>
            <div class="loader popup" data-ng-show="vm.dataLoading"></div>
        </div>
    </div>
</div>
<div id="selectionOptions" data-json="@JsonConvert.SerializeObject(Model.SelectionOptions, new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() })"></div>

@section Scripts {
    @{await Html.RenderPartialAsync("_Angular");}
}

