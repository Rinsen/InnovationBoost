!function(){"use strict";angular.module("app",["isteven-multi-select","smart-table"])}(),function(){"use strict";function e(e){var t=this;t.title="DashboardController",t.selected={overview:!0,specific:!1,otherSpecific:!1,reset:function(){this.overview=!1,this.specific=!1,this.otherSpecific=!1}},t.select=function(e){switch(t.selected.reset(),e){case"overview":t.selected.overview=!0;break;case"specific":t.selected.specific=!0;break;case"otherSpecific":t.selected.otherSpecific=!0}}}angular.module("app").controller("DashboardController",e),e.$inject=["$location"]}(),function(){"use strict";function e(e,n){var i=this;i.loading=!0,i.stateChange=!1,i.externalApplications=[],i.name="",i.active=!1,i.activeUntil=new Date,i.createFailed=!1,i.predicate="name",i.reverse=!1,i.mode={create:!1,read:!0,activateCreate:function(){i.mode.create=!0,i.mode.read=!1},activateRead:function(){i.mode.create=!1,i.mode.read=!0}},i.startCreateNew=function(){""===i.activeUntil&&(i.activeUntil=new Date),i.mode.activateCreate()},i.createNew=function(){i.createFailed=!1,i.loading=!0;var e={name:i.name,active:i.active,activeUntil:i.activeUntil};n.create(e).then(function(e){e.data.externalApplications.forEach(function(e){i.externalApplications.unshift(e)}),i.mode.activateRead(),i.createFailed=!1,i.loading=!1,i.name="",i.active=!1,i.activeUntil=new Date},function(){i.loading=!1,i.createFailed=!0})},i.cancelNew=function(){i.mode.activateRead(),i.createFailed=!1},i.order=function(e){i.reverse=i.predicate===e&&!i.reverse,i.predicate=e},i.activate=function(t){i.externalApplications.forEach(function(e){if(e.externalApplicationId===t){if(!0===e.active)return;i.stateChange=!0,e.active=!0,n.update(e).then(function(){i.stateChange=!1},function(){i.stateChange=!1,e.activate=!1,alert("Failed to update active state")})}})},i.deactivate=function(t){i.externalApplications.forEach(function(e){if(e.externalApplicationId===t){if(!1===e.active)return;i.stateChange=!0,e.active=!1,n.update(e).then(function(){i.stateChange=!1},function(){i.stateChange=!1,e.activate=!0,alert("Failed to update active state")})}})},n.getAll().then(function(e){e.data.externalApplications.forEach(function(e){i.externalApplications.push(e)}),i.loading=!1})}angular.module("app").controller("ExternalApplicationsController",e),e.$inject=["$location","ExternalApplicationsService"]}(),function(){"use strict";function e(e,n){var i=this;i.show=function(){i.dataLoading=!0,i.logs.length=0;var t={from:i.options.from,to:i.options.to,logLevels:[],logEnvironments:[],logApplications:[],logSources:[]};i.options.logLevels.forEach(function(e){e.selected&&t.logLevels.push(e.level)}),i.options.logEnvironments.forEach(function(e){e.selected&&t.logEnvironments.push(e.id)}),i.options.logApplications.forEach(function(e){e.selected&&t.logApplications.push(e.id)}),i.options.logSources.forEach(function(e){e.selected&&t.logSources.push(e.id)}),n.getLogs(t).then(function(e){e.data.forEach(function(e){e.expanded=!1,i.logs.push(e)}),i.pages=Math.ceil(i.logs.length/i.itemsByPage),i.dataLoading=!1})},i.dataLoading=!1,i.logs=[],i.itemsByPage=100,i.pages=0,i.options=n.getOptions()}angular.module("app").controller("LoggerController",e),e.$inject=["$location","LogSelectionOptionsService"]}(),function(){"use strict";function e(e){this.title="OtherSpecificController"}angular.module("app").controller("OtherSpecificController",e),e.$inject=["$location"]}(),function(){"use strict";function e(e){this.title="OverviewController"}angular.module("app").controller("OverviewController",e),e.$inject=["$location"]}(),function(){"use strict";function e(e){this.title="SpecificController"}angular.module("app").controller("SpecificController",e),e.$inject=["$location"]}(),function(){"use strict";function e(t){return{getAll:function(){return t.get("/ExternalApplications/GetAll")},create:function(e){return t.post("/ExternalApplications/Create",e)},update:function(e){return t.post("/ExternalApplications/Update",e)}}}angular.module("app").factory("ExternalApplicationsService",e),e.$inject=["$http"]}(),function(){"use strict";function e(t){return{getOptions:function(){var e=JSON.parse(document.getElementById("selectionOptions").getAttribute("data-json"));return e.from=new Date(e.from),e.to=new Date(e.to),e},getLogs:function(e){return t.post("Logger/GetLogs",e)}}}angular.module("app").factory("LogSelectionOptionsService",e),e.$inject=["$http"]}();